{% extends "base.html" %}
{% load static %}

{% block cabecalho %}

    <link href="{% static 'css/cadastro.css' %}" rel="stylesheet">
    <link href="{% static 'css/flashcard/novo_flashcard.css' %}" rel="stylesheet">
    <link href="{% static 'css/flashcard/iniciar_desafio.css' %}" rel="stylesheet">
    <link href="{% static 'css/flashcard/desafio.css' %}" rel="stylesheet">
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>`
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

{% endblock cabecalho %}


{% block conteudo %}
    <div class="container">
        <br>
        <br>
        <div class="row">
            <div class="col-md">
                <p class="fonte-secundaria">{{desafio.titulo}}</p>
                <hr>
                <canvas id="grafico1"></canvas>
            </div>
            <div class="col-md">
                <br><br><br><br>
                
                <div style="background-color: white;">

                    <canvas id="grafico2"></canvas>

                </div>
            </div>
        </div>

    </div>
        {{ dados2|json_script:"dados2-data" }}
        {{ categorias|json_script:"categorias-data" }}
    <script>
        const ctx = document.getElementById('grafico1');
      
        new Chart(ctx, {
          type: 'pie',
          data: {
            labels: ['Acertos', 'Erros'],
            datasets: [{
              label: 'Qtd',
              data: [10, 5],
              borderWidth: 1
            }]
          },
          
        });
    </script>

    <script>

        const ctx2 = document.getElementById('grafico2');
        const dados2 = JSON.parse(document.getElementById('dados2-data').textContent || '[]');
        const labels = JSON.parse(document.getElementById('categorias-data').textContent || '[]');
        new Chart(ctx2, {
          type: 'radar',
          data: {
            labels: labels,
            datasets: [{
              label: 'Qtd',
              data: dados2,
              borderWidth: 1,
              fill: true,
              backgroundColor: 'rgba(255, 99, 132, 0.2)',
              borderColor: 'rgb(255, 99, 132)',
              pointBackgroundColor: 'rgb(255, 99, 132)',
              pointBorderColor: '#fff',
              pointHoverBackgroundColor: '#fff',
              pointHoverBorderColor: 'rgb(255, 99, 132)'
            }]
          },
          options: {
            scales: {
              r: { beginAtZero: true }
            }
          }
        });

    </script>

{% endblock conteudo %}